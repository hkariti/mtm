objects:
- store
- pokemon
- location
- trainer
- item

store:
    addItem()
    list of items
    removeItem()
    print()
    getItem()

item:
    type
    value
    quantity
    create() and destroy() methods. maybe copy()
    copy()
    getPrice() method
    incQuantity()
    decQuantity()
    isOver()
    resetQuantity()
    print()

pokemon:
    species
    hp - double
    cp
    cp_extra - gained by candies
    level
    types set
    pokemon_id, -1 if free
    create() - gets list of evolutions
    destroy()
    getCP() - effective cp after candies
    getHP()
    getLevel()
    getSpecies()
    giveCandy()
    givePotion()
    battle() - gets target trainer and target pokemon
    getXpWorth()  - how much xp is gained by capturing
    isDead()
    print()

pokedex:
    pokedex_entry
    create()
    add()
    get()
    destroy()

evolutions:
    evolution_entry

trainer:
    xp - double
    list of pokemon
    list of items
    money
    current_location
    addPokemon()
    pokemonGetById()
    healPokemon()
    trainPokemon()
    trainerPrintDetails()
    battle()
    go()
    buyItem()
    getName()
    getXP()

locations:
    name
    next_locations
    pokemon list
    pushPokemon()
    popPokemon()
    addNeighbor()
    getName()
    getNeighbor() 
    print()

main+parser:
    mtmErrorCode parseArgs(int argc, char* argv, char* pokedex_file, char* evolutions_file, char* locations_file, char* input_file, char* output_file)
    Pokedex parsePokedex(File* pokedex_file)
    Location parsePokedex(File* locations_file, Pokedex pokedex)
    Evolution parsePokedex(File* evolutions_file, Pokedex pokedex)
    ExecuteCommand(char* command_string, PokemonGo pokemonGo)

game:
    pokedex dict
    evolutions dict
    locations dict
    store pointer
    trainers dict
    pokemongoCreate(Pokedex pokedex, Evolutions evolutions, Location locations)
    trainerAdd()
    trainerGo()
    storeAdd()
    trainerPurchase()
    battleFight()
    pokemonHeal()
    pokemonTrain()
    reportTrainer()
    reportLocations()
    reportStock()

